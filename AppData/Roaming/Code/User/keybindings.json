[
    {
        "key": "ctrl+.",
        "command": "keyboard-quickfix.openQuickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+n",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-extension.vim_ctrl+j",
        "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-editor.action.insertSnippet",
        "when": "editorTextFocus && editorLangId == 'powershell'"
    },
    {
        "key": "ctrl+k",
        "command": "-extension.vim_ctrl+k",
        "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+c",
        "command": "extension.createSnipp",
        "when": "editorHasSelection && editorTextFocus"
    },
    {
        "key": "ctrl+shift+.",
        "command": "-breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "ctrl+shift+.",
        "command": "-editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+.",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "ctrl+shift+.",
        "command": "editor.action.autoFix",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
    },
    {
        "key": "ctrl+up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+alt+p",
        "command": "-svgPreview.showPreviewToSide",
        "when": "resourceLangId == 'svg' || resourceLangId == 'xml'"
    },
    {
        "key": "shift+win+b",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+[",
        "command": "bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+]",
        "command": "bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "-bookmarks.expandSelectionToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "-bookmarks.expandSelectionToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+k",
        "command": "-bookmarks.shrinkSelection",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+win+r",
        "command": "flutter.hotRestart",
        "when": "dart-code:anyFlutterProjectLoaded && dart-code:service.reloadSources && inDebugMode"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+f4",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+f4",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "shift+win+d",
        "command": "dart.openDevTools",
        "when": "dart-code:dartProjectLoaded"
    },
    {
        "key": "ctrl+alt+d",
        "command": "-dart.openDevTools",
        "when": "dart-code:dartProjectLoaded"
    },
    {
        "key": "shift+win+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "shift+win+j",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "shift+win+h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "shift+win+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "shift+win+h",
        "command": "workbench.action.previousPanelView",
        "when": "panelFocus"
    },
    {
        "key": "shift+win+l",
        "command": "workbench.action.nextPanelView",
        "when": "panelFocus"
    },
    {
        "key": "alt+`",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "win+`",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "j"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+alt+d",
        "command": "fileutils.removeFile",
        "when": "neovim.mode == normal && editorTextFocus",
    },
    {
        "key": "alt+r",
        "command": "fileutils.renameFile",
        "when": "neovim.mode == normal && editorTextFocus",
    },
    {
        "key": "alt+d",
        "command": "fileutils.duplicateFile",
        "when": "neovim.mode == normal && editorTextFocus",
    },
    {
        "key": "ctrl+alt+n",
        "command": "fileutils.newFileAtRoot",
        "when": "neovim.mode == normal && editorTextFocus",
    },
    {
        "key": "alt+n",
        "command": "fileutils.newFile",
        "when": "neovim.mode == normal && editorTextFocus",
    },
    {
        "key": "alt+m",
        "command": "fileutils.moveFile",
        "when": "neovim.mode == normal && editorTextFocus",
    },
    {
        "key": "alt+f",
        "command": "fileutils.copyFileName",
        "when": "neovim.mode == normal && editorTextFocus",
    },
    {
        "key": "alt+p",
        "command": "copyRelativeFilePath",
        "when": "neovim.mode == normal && editorTextFocus",
    },
    {
        "command": "bookmarks.toggle",
        "key": "alt+b",
        "when": "neovim.mode == normal && editorTextFocus",
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.terminal.newInActiveWorkspace"
    },
    {
        "key": "alt+i",
        "command": "editor.action.insertSnippet",
        "when": "neovim.mode == insert && editorTextFocus"
    },
]
